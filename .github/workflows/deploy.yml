name: Deploy to VPS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Upload semua source ke server (kecuali folder yang tidak perlu)
      - name: Upload source to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          # kirim isi repo ke /var/www/sikap (exclude vendor & node_modules)
          source: |
            ./
          target: /var/www/sikap
          rm: true
          overwrite: true
          strip_components: 0
          # exclude patterns agar upload lebih cepat
          exclude: |
            .git*
            vendor/*
            node_modules/*
            storage/logs/*
            storage/framework/cache/*
            storage/framework/sessions/*
            storage/framework/views/*
            .env

      - name: SSH — install & deploy on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          timeout: 90s
          command_timeout: 30m
          script: |
            set -e
            APP_DIR=/var/www/sikap
            PHP_FPM=php8.3-fpm

            cd "$APP_DIR"

            echo "[1] Pastikan direktori runtime laravel"
            mkdir -p storage/framework/{cache,sessions,views} storage/logs bootstrap/cache
            sudo chown -R $USER:www-data .
            sudo chmod -R 775 storage bootstrap/cache

            echo "[2] Pastikan composer terpasang"
            if ! command -v composer >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y composer
            fi

            echo "[3] Install ext GD (QR/Excel/Word butuh gd)"
            php -m | grep -qi gd || (sudo apt-get update -y && sudo apt-get install -y php-gd php8.3-gd || true)

            echo "[4] Composer install (tanpa dev)"
            composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            echo "[5] .env & APP_KEY"
            if [ ! -f .env ]; then
              if [ -f .env.example ]; then cp .env.example .env; fi
            fi
            grep -q '^APP_KEY=base64:' .env || php artisan key:generate

            echo "[6] Storage symlink & optimize"
            php artisan storage:link || true
            php artisan optimize:clear
            php artisan optimize

            echo "[7] Migrasi database (pakai --force)"
            php artisan migrate --force

            echo "[8] Node.js & build asset (Vite)"
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            if [ -f package.json ]; then
              npm ci || npm install
              npm run build
            fi

            echo "[9] (Opsional) Generate dokumen demo"
            php artisan demo:generate-docs --force || true

            echo "[10] Reload services"
            sudo systemctl reload $PHP_FPM || sudo systemctl restart $PHP_FPM || true
            sudo systemctl reload nginx || true

            echo "✅ Deploy selesai"
